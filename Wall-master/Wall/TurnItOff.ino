/*===========================================================================================================*/
void turnItOff() {
  /*запускает игру выключи их все
   * выполняется в бесконечном цикле пока в прерывании не будет изменен флаг прерывания
  */
  while (!flagInterrupt) {
    turnAll();
    isBtnPressed();
    isOffExist();
  }
}

/*===========================================================================================================*/
void isBtnPressed() {
  /*
   * Проверяет нажаты ли кнопки
   * при нажатии гасит светодиоды, зануляет маску на этой ячейке
   * запускает случайный таймер для включения кнопки
  */
  for (int i = 0; i < BTN_COUNT; i++) {
    if (digitalRead(btn[i]) == HIGH) {
      changeLedState(i, LOW);
      mask[i] = 0;
      timers[i] = Random(3000, 5000);
      currentTime = millis();
    }
  }
}
/*===========================================================================================================*/
/*
 * Включает все светодиоды, 
 * присваивает маскам 1
*/
void turnAll() {
  for (int i; i < BTN_COUNT; i++) {
    changeLedState(i, HIGH);
    mask[i] = 1;
  }
}
/*===========================================================================================================*/
/*Проверяет существуеют ли кнопки с выключеными диодами и соответственно с маской равной 0
 * Если все кнопки выключены то победа
 * Если нет, то идет проверка на окончание таймера
*/
void isOffExist() {
  for (int i; i < BTN_COUNT; i++) {
    if (mask[i] == 0) {
      if (isAllOff()) {
        winRound();
      }
      else {
        isTimerOver();
      }
    }
  }
}
/*===========================================================================================================*/
/*
* Проверяет все ли кнопки выключены
* Возвращает true если все кнопки выключены
* false если не все выключены
*/
boolean isAllOff() {
  for (int i; i < BTN_COUNT; i++) {
    if (mask[i] == 1) {
      return false;
    }
  }
  return true;
}
/*===========================================================================================================*/
void isTimerOver() {
  for (int i; i < BTN_COUNT; i++) {
    if (millis() - currentTime > timers[i]) {
      mask[i] == 1;
      changeLedState(i, HIGH);
      timers[i] = 0;
    }
  }
}
/*===========================================================================================================*/
